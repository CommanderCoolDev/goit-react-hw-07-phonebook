{"version":3,"sources":["Components/ContactList/ContactList.module.css","Components/Filter/Filter.module.css","Components/ContactForm/ContactForm.module.css","redux/contact/contacts-selectors.js","redux/contact/contacts-actions.js","redux/contact/contacts-operations.js","Components/ContactForm/ContactForm.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","App.js","redux/contact/contacts-reducers.js","redux/store.js","index.js"],"names":["module","exports","getContacts","state","contacts","items","getFilter","filter","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","text","name","includes","getFiteredContacts","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactsRequest","addContactsSuccess","addContactsError","deleteContactsRequest","deleteContactsSuccess","deleteContactsError","changeFilter","axios","defaults","baseURL","contactsOperations","fetchContacts","dispatch","a","get","data","addContact","number","contact","post","deleteContact","id","delete","ContactForm","useState","setName","setNumber","contactNameId","shortid","generate","contactNumberId","useDispatch","useSelector","handleChange","e","currentTarget","value","reset","className","s","form","onSubmit","preventDefault","find","alert","label","htmlFor","input","type","onChange","btn","ContactList","useEffect","map","item","span","onClick","onDeleteContact","Filter","actions","target","App","createReducer","_","payload","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","phonebookPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.95a7df8f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"ContactList_btn__18nQG\",\"item\":\"ContactList_item__1pn8u\",\"span\":\"ContactList_span__1jXtE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2noay\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2-qqS\",\"label\":\"ContactForm_label__2eLW4\",\"input\":\"ContactForm_input__bg05J\",\"btn\":\"ContactForm_btn__3oNkh\"};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const getFiteredContacts = contacts => {\n      const normalizedFilter = filter.toLowerCase();\n      return contacts.filter(text =>\n        text.name.toLowerCase().includes(normalizedFilter),\n      );\n    };\n\n    return getFiteredContacts(contacts);\n  },\n);\n","import { createAction } from '@reduxjs/toolkit';\n// import shortid from 'shortid';\n\nexport const fetchContactsRequest = createAction(\n  'contacts/fetchContactsRequest',\n);\nexport const fetchContactsSuccess = createAction(\n  'contacts/fetchContactsSuccess',\n);\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\nexport const addContactsRequest = createAction('contacts/addContactsRequest');\nexport const addContactsSuccess = createAction('contacts/addContactsSucces');\nexport const addContactsError = createAction('contacts/addContactsError');\n\nexport const deleteContactsRequest = createAction(\n  'contacts/deleteContactsRequest',\n);\nexport const deleteContactsSuccess = createAction(\n  'contacts/deleteContactsSucces',\n);\nexport const deleteContactsError = createAction('contacts/deleteContactsError');\n\nexport const changeFilter = createAction('contacts/changeFilter');\n// const addContact = createAction('contacts/add', (name, number) => ({\n//   payload: {\n//     id: shortid.generate(),\n//     name,\n//     number,\n//   },\n// }));\n\n// const deleteContact = createAction('contacts/delete');\n\n// const contactsActions = { addContact, deleteContact, changeFilter };\n// export default contactsActions;\n","import axios from 'axios';\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactsRequest,\n  addContactsSuccess,\n  addContactsError,\n  deleteContactsRequest,\n  deleteContactsSuccess,\n  deleteContactsError,\n} from './contacts-actions';\n\naxios.defaults.baseURL = 'http://localhost:4040';\n\nconst fetchContacts = () => async dispatch => {\n  dispatch(fetchContactsRequest());\n  try {\n    const { data } = await axios.get('/contacts');\n    dispatch(fetchContactsSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactsError(error));\n  }\n};\n\nconst addContact = (name, number) => async dispatch => {\n  const contact = {\n    name,\n    number,\n  };\n\n  dispatch(addContactsRequest());\n\n  try {\n    const { data } = await axios.post('/contacts', contact);\n    dispatch(addContactsSuccess(data));\n  } catch (error) {\n    dispatch(addContactsError(error));\n  }\n};\n\nconst deleteContact = id => async dispatch => {\n  dispatch(deleteContactsRequest());\n  try {\n    await axios.delete(`/contacts/${id}`);\n    dispatch(deleteContactsSuccess(id));\n  } catch (error) {\n    dispatch(deleteContactsError(error));\n  }\n};\n\nconst contactsOperations = {\n  fetchContacts,\n  addContact,\n  deleteContact,\n};\nexport default contactsOperations;\n","import { useState } from 'react';\nimport shortid from 'shortid';\nimport s from './ContactForm.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\n// import * as  contactsActions from '../../redux/contact/contacts-actions';\nimport { getContacts } from '../../redux/contact/contacts-selectors';\nimport contactsOperations from '../../redux/contact/contacts-operations';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contactNameId = shortid.generate();\n  const contactNumberId = shortid.generate();\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (name === '') {\n      alert(`Введите, пожалуйста, имя контакта.`);\n      return;\n    }\n\n    if (number === '') {\n      alert(`Введите, пожалуйста, номер телефона контакта.`);\n      return;\n    }\n\n    if (contacts.find(contact => contact.name === name)) {\n      alert(`${name} is already in contacts.`);\n      reset();\n      return;\n    }\n\n    dispatch(contactsOperations.addContact(name, number));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label} htmlFor={contactNameId}>\n        Name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          id={contactNameId}\n        />\n      </label>\n      <label className={s.label} htmlFor={contactNumberId}>\n        Number\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          id={contactNumberId}\n        />\n      </label>\n\n      <button className={s.btn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n","import PropTypes from 'prop-types';\n\nimport s from './ContactList.module.css';\n\nimport { useSelector, useDispatch } from 'react-redux';\n// import contactsActions from '../../redux/contact/contacts-actions';\nimport { getVisibleContacts } from '../../redux/contact/contacts-selectors';\nimport contactsOperations from '../../redux/contact/contacts-operations';\nimport { useEffect } from 'react';\n\nexport default function ContactList() {\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n\n  const onDeleteContact = id => dispatch(contactsOperations.deleteContact(id));\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContacts());\n  }, [dispatch]);\n  return (\n    <ul>\n      {contacts.map(({ id, name, number }) => (\n        <li className={s.item} key={id}>\n          <span className={s.span}>{name}: </span>\n          <span className={s.span}>{number}</span>\n          <button onClick={() => onDeleteContact(id)} className={s.btn}>\n            DELETE!!!!!\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.number.isRequired,\n  }),\n  onDelete: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './Filter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../../redux/contact/contacts-selectors';\nimport * as actions from '../../redux/contact/contacts-actions';\n\nexport default function Filter() {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input\n        type=\"text\"\n        value={value}\n        onChange={e => dispatch(actions.changeFilter(e.target.value))}\n      ></input>\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  // getFilter: PropTypes.func.isRequired,\n  // value: PropTypes.string.isRequired,\n};\n","import ContactForm from './Components/ContactForm/ContactForm';\nimport ContactList from './Components/ContactList/ContactList';\nimport Filter from './Components/Filter/Filter';\n\nimport './App.css';\n\nexport default function App() {\n  return (\n    <div className=\"block\">\n      <h2>Phonebook</h2>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n","import { createReducer } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport {\n  addContactsSuccess,\n  deleteContactsSuccess,\n  changeFilter,\n  fetchContactsSuccess,\n} from './contacts-actions';\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactsSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactsSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport logger from 'redux-logger';\nimport contactsReducer from './contact/contacts-reducers';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst phonebookPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nexport const store = configureStore({\n  reducer: {\n    contacts: persistReducer(phonebookPersistConfig, contactsReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\n// export const persistor = persistStore(store);\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\n// import { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}